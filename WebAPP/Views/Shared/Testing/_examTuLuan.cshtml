@model ViewModels.CauHoiTuLuan.Response.CauHoiTuLuanVm
@{
    int thisQ = Convert.ToInt32(ViewBag.numQuestionTuLuan);
    int totalQTuLuan = Convert.ToInt32(ViewBag.soluongcauhoiTuLuan);

    double percentProcessbar = ((double)thisQ / totalQTuLuan) * 100;
    string pP = percentProcessbar.ToString("0") + "%";
    int no = 0;
}
<style>
    #trinhtuthaotac thead tr th {
        pointer-events: none;
    }

    #trinhtuthaotac tbody > tr:last-child > td {
        border-bottom: 0;
    }
</style>
<div class="progress-group">
    <div class="progress-group-header">
        <i class="bi-mortarboard mx-1"></i>
        <div>Phần thi tự luận</div>
        <div class="ms-auto font-weight-bold">Đã hoàn thành @thisQ/@totalQTuLuan câu hỏi</div>
    </div>
    <div class="progress-group-bars">
        <div class="progress ">
            <div class="progress-bar progress-bar-striped bg-success progress-bar-animated" role="progressbar" aria-valuemin="0" aria-valuemax="100" style="width: @pP"></div>
        </div>
    </div>
</div>

<div class="card bg-white pt-1 border border-0" style="background-image: url('/paper.jpg'); background-size:cover; background-position: center;">
    <div class="card-body text-center">
        <form id="formTraLoiCauHoiTuLuan">
            <div>
                <span class="badge rounded-pill text-bg-dark mb-3">@Model.Score điểm</span>
                <h2>@Model.Text</h2>
                <p class="mb-1" style="text-align:start;font-weight:600;"> I. Sắp xếp theo đúng trình tự WSD:</p>
                <div class="card">
                    <div class="card-body">
                        <table id="trinhtuthaotac" class="table table-hover " style="width:100%">
                            <thead style="vertical-align:middle;font-size:small">
                                <tr>
                                    <th class="col-2" style="font-weight: 300;text-align:center">
                                        Trình tự thao tác
                                    </th>
                                    <th hidden>
                                        Id
                                    </th>
                                    <th class="col-10" style="font-weight: 300">
                                        Nội dung thao tác
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in ViewBag.listTrinhTuThaoTac as List<ViewModels.CauHoiTrinhTuThaoTac.Response.CauHoiTrinhTuThaoTacVm>)
                                {
                                    no++;
                                    <tr style="text-align:center;vertical-align:middle">
                                        <th style="font-weight: 300">
                                            @no
                                        </th>
                                        <td hidden>
                                            @item.Id
                                        </td>
                                        <td style="text-align:start">
                                            @item.Text
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                    </div>
                </div>
            </div>
            <div class="mt-3">
                <p class="mb-1" style="text-align:start;font-weight:600;"> II. Điểm chú ý tại công đoạn / Spec tại công đoạn (Nếu có):</p>
                <div class="card">
                    <div class="card-body">
                        <table id="tblDCY" class="table table-hover" style="width:100%">
                            <thead style="vertical-align:middle;font-size:small">
                                <tr>
                                    <th  style="font-weight: 300;text-align:center;width:100px">
                                        STT
                                    </th>
                                    <th hidden>
                                        Id
                                    </th>
                                    <th  style="font-weight: 300;text-align:start">
                                        Điểm chú ý
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var listTTTT = ViewBag.listTrinhTuThaoTac as List<ViewModels.CauHoiTrinhTuThaoTac.Response.CauHoiTrinhTuThaoTacVm>;
                                    var listDCY = new List<ViewModels.CauHoiTrinhTuThaoTac.DiemChuY.DiemChuYVm>();
                                    foreach (var i in listTTTT)
                                    {
                                        if (i.diemChuYs.Any())
                                        {
                                            foreach (var it in i.diemChuYs)
                                                listDCY.Add(it);
                                        }
                                    }
                                    foreach (var dcy in listDCY.OrderBy(x => new Random().Next()))
                                    {
                                        <tr style="text-align:center;vertical-align:middle" data-id="@dcy.Id" data-chtlId="@Model.Id">
                                            <th style="font-weight: 300">
                                                <input min="1" class="form-control ansDCY" style="text-align:center" type="number" required>
                                            </th>
                                            <td hidden>
                                                @dcy.Id
                                            </td>
                                            <td style="text-align:start">
                                                @dcy.Text
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>

                    </div>
                </div>
            </div>

            <div class="mt-3">
                <p class="mb-1" style="text-align:start; font-weight: 600;"> III. Lỗi tại công đoạn:</p>
                <div class="card">
                    <div class="card-body">
                        <table id="tblLTCD" class="table table-hover " style="width:100%">
                            <thead style="vertical-align:middle;font-size:small">
                                <tr>
                                    <th style="font-weight: 300;text-align:center;width:100px">
                                        STT
                                    </th>
                                    <th hidden>
                                        Id
                                    </th>
                                    <th style="font-weight: 300;text-align:start">
                                        Lỗi tại công đoạn
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var listLTCD = new List<ViewModels.CauHoiTrinhTuThaoTac.LoiTaiCongDoan.LoiTaiCongDoanVm>();
                                    foreach (var itemTTTT in listTTTT)
                                    {
                                        if (itemTTTT.loiTaiCongDoans.Any())
                                        {
                                            foreach (var itemLTCT in itemTTTT.loiTaiCongDoans)
                                                listLTCD.Add(itemLTCT);
                                        }
                                    }
                                    foreach (var ltcd in listLTCD.OrderBy(x => new Random().Next()))
                                    {
                                        <tr style="text-align:center;vertical-align:middle" data-id="@ltcd.Id" data-chtlId="@Model.Id">
                                            <th style="font-weight: 300">
                                                <input min="1" class="form-control ansLTCD" style="text-align:center" type="number" required>
                                            </th>
                                            <td hidden>
                                                @ltcd.Id
                                            </td>
                                            <td style="text-align:start">
                                                @ltcd.Text
                                            </td>
                                        </tr>
                                    }
                                    var selectListLTCD = new SelectList(listLTCD, "Id", "Text");
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <div class="mt-3">
                <p class="mb-1" style="text-align:start;    font-weight: 600;"> IV. Đối sách:</p>
                <div class="card">
                    <div class="card-body">
                        <table id="tblDS" class="table table-hover " style="width:100%">
                            <thead style="vertical-align:middle;font-size:small">
                                <tr>
                                    <th class="col-5" style="font-weight: 300;text-align:center">
                                        Lỗi tại công đoạn
                                    </th>
                                    <th hidden>
                                        Id
                                    </th>
                                    <th class="col-2">

                                    </th>
                                    <th class="col-5" style="font-weight: 300;text-align:start">
                                        Đối sách
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var listDS = new List<ViewModels.CauHoiTrinhTuThaoTac.LoiTaiCongDoan.DoiSach.DoiSachVm>();
                                    foreach (var itemTTTT in listTTTT)
                                    {
                                        if (itemTTTT.loiTaiCongDoans.Any())
                                        {
                                            foreach (var itemLTCT in itemTTTT.loiTaiCongDoans)
                                            {
                                                if (itemLTCT.doiSaches.Any())
                                                {
                                                    foreach (var item in itemLTCT.doiSaches)
                                                    {
                                                        listDS.Add(item);
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    foreach (var ds in listDS.OrderBy(x => new Random().Next()))
                                    {
                                        <tr style="text-align:center;vertical-align:middle" data-id="@ds.Id" data-chtlId="@Model.Id">
                                            <th style="font-weight: 300">
                                                <select class="form-select ansDS" style="text-align:center" type="number">
                                                    <option selected disabled>- - -</option>
                                                    @foreach (var ltcd in selectListLTCD)
                                                    {
                                                        <option value="@ltcd.Text">@ltcd.Text</option>
                                                    }
                                                </select>
                                            </th>
                                            <td hidden>
                                                @ds.Id
                                            </td>
                                            <td style="text-align:center">
                                                <i class="bi-arrow-right"></i>
                                            </td>
                                            <td style="text-align:start">
                                                @ds.Text
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>

                    </div>
                </div>
            </div>
            <button style="width:200px" class="btn btn-lg btn-success mt-3" id="btnTraLoiTL">
                <i class="bi-check"></i>
                Xác nhận trả lời
            </button>
        </form>
    </div>
</div>

<script>
    $(document).ready(function () {
        var isPartialDirty = false;
        var newOrder = [];
        var parsedNewOrder = [];
        var table = $("#trinhtuthaotac").DataTable({
            "paging": false,
            "searching": false,
            "info": false,
            columnDefs: [
                { orderable: true, className: 'reorder', targets: '_all' },
            ],
            rowReorder: {
                selector: 'tr',
                snapX: 10
            }
        });

        table.on('row-reorder', function (e, diff, edit) {
            table.one('draw', function () {
                newOrder = [];
                for (var i = 0; i < table.rows().count(); i++) {
                    var rowData = table.row(i).data();
                    newOrder.push({ Id: rowData[1], ThuTu: rowData[0] });
                }
                parsedNewOrder = newOrder.map(item => ({ Id: item.Id, ThuTu: parseInt(item.ThuTu) }));
                console.log(parsedNewOrder)
            });
        });

        const Toast = Swal.mixin({
            toast: true,
            position: "top",
            showConfirmButton: false,
            timer: 2000,
            timerProgressBar: true,
        });


        $("#btnTraLoiTL").click(function (e) {
            var form = $("#formTraLoiCauHoiTuLuan")[0];
            if (form.checkValidity()) {
                e.preventDefault();
                if (parsedNewOrder.length === 0) {
                    Swal.fire({
                        icon: "error",
                        width: 400,
                        text: "Hãy sắp xếp trước khi xác nhận",
                        showConfirmButton: false,
                        timer: 1000,
                    })
                }
                else {
                    let allAnsDSHaveData = true;  // Biến để theo dõi trạng thái

                    $('#tblDS tbody tr').each(function () {
                        let selectText = $(this).find('.ansDS').val();
                        if (!selectText) {
                            // Nếu một trong các .ansDS không có dữ liệu
                            allAnsDSHaveData = false;  // Đặt biến thành false
                            return false;  // Dừng vòng lặp
                        }
                    });

                    if (!allAnsDSHaveData) {
                        // Hiển thị thông báo khi có ít nhất một .ansDS không có dữ liệu
                        Swal.fire({
                            icon: "warning",
                            title: "Vui lòng chọn lỗi tương ứng với đối sách",
                            showConfirmButton: false,
                            timer: 1000,
                        });
                        // Ngăn chặn sự kiện mặc định (form submission)
                        event.preventDefault();
                    } else {
                        // Tiếp tục xử lý khi tất cả các .ansDS đều có dữ liệu
                        //Start get values from tbl here:
                        var dataDCY = [];
                        var dataLTCD = [];
                        var dataDS = [];
                        $('#tblDCY tbody tr').each(function () {
                            let inputValue = $(this).find('.ansDCY').val();
                            let id = $(this).attr("data-id");
                            id = parseInt(id)
                            inputValue = parseInt(inputValue)
                            dataDCY.push({
                                Id: id,
                                Answer: inputValue
                            });
                        });
                        $('#tblLTCD tbody tr').each(function () {
                            let inputValue = $(this).find('.ansLTCD').val();
                            let id = $(this).attr("data-id");
                            id = parseInt(id)
                            inputValue = parseInt(inputValue)
                            dataLTCD.push({
                                Id: id,
                                Answer: inputValue
                            });
                        });
                        $('#tblDS tbody tr').each(function () {
                            let selectText = $(this).find('.ansDS').val();
                            if (!selectText) {
                                // Prevent form submission
                                event.preventDefault();
                                // Display an alert or any other validation message
                                Swal.fire({
                                    icon: "warning",
                                    title: "Vui lòng chọn lỗi tương ứng với đối sách",
                                    showConfirmButton: false,
                                    timer: 1000,
                                });
                            } else {
                                let id = $(this).attr("data-id");
                                id = parseInt(id)
                                dataDS.push({
                                    Id: id,
                                    Answer: selectText
                                });
                            }
                        });
                        //Send all value to Controller:
                        var dataToSend = {
                            dataDCY: dataDCY,
                            dataLTCD: dataLTCD,
                            dataDS: dataDS,
                            dataTTTT: parsedNewOrder
                        };
                        console.log(dataToSend)

                        $.ajax({
                            url: 'TraloiTuLuan',
                            type: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify(dataToSend),
                            dataType: 'json', // Add this line

                            success: function (response) {
                                $.ajax({
                                    url: 'TestingTuLuan',
                                    type: 'GET',
                                    success: function (response) {
                                        Toast.fire({
                                            icon: "success",
                                            title: "Đang trả lời câu hỏi...",
                                            showConfirmButton: false,
                                            allowOutsideClick: false,
                                            allowEscapeKey: false
                                        }).then(function () {
                                            $("#examTuluan").html(response);
                                        })
                                    },
                                    error: function (error) {
                                        console.log(error);
                                    }
                                });
                            },
                            error: function (error) {
                                console.log(error);
                            }
                        });
                    }
                }
            } else {
                form.reportValidity();
            }
        })

    });
</script>

