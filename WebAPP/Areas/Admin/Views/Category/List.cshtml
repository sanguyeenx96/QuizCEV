@model IEnumerable<ViewModels.Category.Response.CategoryVm>

@{
    ViewData["Active"] = "pageChuDePhongThi";
    ViewData["ActiveChild"] = "pageDanhSachChuDePhongThi";
}


<table class="table" style="text-align:center; vertical-align:middle">
    <thead>
        <tr>
            <th>
                Tên
            </th>
            <th>
                Ngày tạo
            </th>
            <th>
                Cập nhật gần nhất
            </th>
            <th>
                Trạng thái
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateCreate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastUpdate)
                </td>
                <td>
                   @if(item.Status == true){
                        <div><i class="bi-toggle2-on" style="color:green"></i> Online</div>
                   }else{
                        <div><i class="bi-toggle2-off" style="color:red"></i> Offline</div>
                   }
                </td>
                <td>
                    <div class="btn-group" style=" white-space:nowrap">
                        <btn class="btn btn-outline-secondary btn-sm btnSua" data-id="@item.Id">
                            <i class="bi-pencil-fill"> </i>
                            Đổi tên
                        </btn>
                        <btn class="btn btn-outline-danger btn-sm btnXoa" data-id="@item.Id" data-name="@item.Name">
                            <i class="bi-trash"> </i>
                            Xoá
                        </btn>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>


<script>
    $(document).ready(function () {
        const swalWithBootstrapButtons = Swal.mixin({
            buttonsStyling: true,
        });
        const Toast = Swal.mixin({
            toast: true,
            position: "top-end",
            showConfirmButton: false,
            timer: 800,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.onmouseenter = Swal.stopTimer;
                toast.onmouseleave = Swal.resumeTimer;
            }
        });
        

        $(".btnSua").click(function (e) {
            var id = $(this).data("id");
            var data = {
                id: id
            };
            $.ajax({
                url: "GetById",
                type: "POST",
                data: data,
                success: function (data) {
                    if (data.success) {
                        handleSuccess(data, id);
                    } else {
                        Swal.fire("Thất bại!", data.message, "error");
                    }
                },
                error: function (xhr, t, error) {
                    Swal.fire("Thất bại!", "Lỗi máy chủ", "error");
                },
            });
        });

        async function handleSuccess(data, id) {
            if (data.success) {
                const { value: newName } = await swalWithBootstrapButtons.fire({
                    title: "Đổi tên chủ đề & phòng thi",
                    input: "text",
                    inputLabel: data.data.name,
                    inputPlaceholder: "Nhập tên mới",
                    showCancelButton: true,
                    confirmButtonText: "Xác nhận",
                    cancelButtonText: "Huỷ bỏ"
                });
                if (newName) {
                    $.ajax({
                        url: "UpdateName",
                        type: "POST",
                        data: {
                            id: id,
                            Name: newName
                        },
                        success: function (data) {
                            if (data.success) {
                                Toast.fire({
                                    icon: "success",
                                    title: "Đang xử lý..."
                                }).then(function () {
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire(
                                    "Không thành công!",
                                    data.message,
                                    "error"
                                );
                            }
                        },
                    });

                }
            } else {
                Swal.fire("Thất bại!", data.message, "error");
            }
        }

        $(".btnXoa").click(function (e) {
            var id = $(this).data("id");
            var name = $(this).data("name");

            swalWithBootstrapButtons
                .fire({
                    title: "Xoá chủ đề & phòng thi?",
                    text: name,
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Xác nhận",
                    cancelButtonText: "Huỷ bỏ"
                })
                .then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: "Delete",
                            type: "POST",
                            data: {
                                id: id
                            },
                            success: function (data) {
                                if (data.success) {
                                    Toast.fire({
                                        icon: "success",
                                        title: "Đang xử lý..."
                                    }).then(function () {
                                        window.location.reload();
                                    });
                                } else {
                                    Swal.fire(
                                        "Không thành công!",
                                        data.message,
                                        "error"
                                    );
                                }
                            },
                        });
                    }
                });

        });
    });
</script>



