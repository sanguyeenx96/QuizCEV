@model IEnumerable<ViewModels.Category.Response.CategoryVm>

@{
    ViewData["Active"] = "pageChuDePhongThi";
    ViewData["ActiveChild"] = "pageDanhSachChuDePhongThi";
}
<style>
    .btn-group .btn {
        margin-right: 2px; /* Điều chỉnh giá trị để thay đổi kích thước của khoảng trống */
    }
</style>
<div class="col-sm-6 col-md-3 mb-2">
    <div class="card">
        <div class="card-body">
            <div class="text-medium-emphasis text-end">
                <i class="bi-folder2-open"></i>
            </div>
            <div class="fs-4 fw-semibold">@Model.Count()</div><small class="text-medium-emphasis text-uppercase fw-semibold">Phòng thi</small>
        </div>
    </div>
</div>
<div class="card">
    <div class="card-body">
        <table id="tblDanhsachchudephongthi" class="table table-hover" style="text-align:center; vertical-align:middle;width:100%">
            <thead style="font-size:small">
                <tr>
                    <th style="text-align:center;font-weight: 350;">
                        Tên Chủ đề & Phòng thi
                    </th>
                    <th style="text-align:center;font-weight: 350;">
                        Ngày tạo
                    </th>
                    <th style="text-align:center" hidden>
                        Cập nhật gần nhất
                    </th>
                      <th style="text-align:center;font-weight: 350;">
                        Thời gian thi
                    </th>
                    <th style="text-align:center;font-weight: 350;">
                        Trạng thái
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td style="text-align:left">
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @item.DateCreate.ToString("dd/MM/yyyy")
                        </td>
                        <td hidden>
                            @Html.DisplayFor(modelItem => item.LastUpdate)
                        </td>
                        <td>
                            @item.Time phút
                        </td>
                        <td>
                            @if (item.Status == true)
                            {
                                <div><i class="bi-toggle2-on" style="color:green"></i> Online</div>
                            }
                            else
                            {
                                <div><i class="bi-toggle2-off" style="color:red"></i> Offline</div>
                            }
                        </td>
                        <td style="text-align:end">
                            <div class="btn-group" style=" white-space:nowrap">
                                <btn class="btn btn-dark btnSuaThoiGian" data-id="@item.Id">
                                    <i class="bi-clock"> </i>
                                    Đổi thời gian thi
                                </btn>
                                <btn class="btn btn-dark btnSua" data-id="@item.Id">
                                    <i class="bi-pencil"> </i>
                                    Đổi tên
                                </btn>
                                <btn class="btn btn-danger text-light btnXoa" data-id="@item.Id" data-name="@item.Name">
                                    <i class="bi-trash"> </i>
                                    Xoá
                                </btn>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


<script>
    $(document).ready(function () {
        $("#tblDanhsachchudephongthi").DataTable({
            "paging": true,
            "searching": true,
            "info": true,
            "responsive": true,
            "ordering": false
        });

        const swalWithBootstrapButtons = Swal.mixin({
            buttonsStyling: true,
        });
        const Toast = Swal.mixin({
            toast: true,
            position: "top-end",
            showConfirmButton: false,
            timer: 800,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.onmouseenter = Swal.stopTimer;
                toast.onmouseleave = Swal.resumeTimer;
            }
        });

        $(".btnSuaThoiGian").click(function (e) {
            var id = $(this).data("id");
            var data = {
                id: id
            };
            $.ajax({
                url: "GetById",
                type: "POST",
                data: data,
                success: function (data) {
                    if (data.success) {
                        handleSuccessChangeTime(data, id);
                    } else {
                        Swal.fire("Thất bại!", data.message, "error");
                    }
                },
                error: function (xhr, t, error) {
                    Swal.fire("Thất bại!", "Lỗi máy chủ", "error");
                },
            });
        });

        async function handleSuccessChangeTime(data, id) {
            if (data.success) {
                const { value: newTime } = await swalWithBootstrapButtons.fire({
                    title: "Đổi thời gian thi",
                    input: "number",
                    inputLabel: "Phòng thi : " + data.data.name,
                    inputPlaceholder: "Nhập thời gian thi",
                    showCancelButton: true,
                    confirmButtonText: "Xác nhận",
                    cancelButtonText: "Huỷ bỏ"
                });
                if (newTime) {
                    $.ajax({
                        url: "UpdateTime",
                        type: "POST",
                        data: {
                            id: id,
                            time: newTime
                        },
                        success: function (data) {
                            if (data.success) {
                                Toast.fire({
                                    icon: "success",
                                    title: "Đang xử lý..."
                                }).then(function () {
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire(
                                    "Không thành công!",
                                    data.message,
                                    "error"
                                );
                            }
                        },
                    });

                }
            } else {
                Swal.fire("Thất bại!", data.message, "error");
            }
        }








        $(".btnSua").click(function (e) {
            var id = $(this).data("id");
            var data = {
                id: id
            };
            $.ajax({
                url: "GetById",
                type: "POST",
                data: data,
                success: function (data) {
                    if (data.success) {
                        handleSuccess(data, id);
                    } else {
                        Swal.fire("Thất bại!", data.message, "error");
                    }
                },
                error: function (xhr, t, error) {
                    Swal.fire("Thất bại!", "Lỗi máy chủ", "error");
                },
            });
        });

        async function handleSuccess(data, id) {
            if (data.success) {
                const { value: newName } = await swalWithBootstrapButtons.fire({
                    title: "Đổi tên phòng thi",
                    input: "text",
                    inputLabel: "Phòng thi : " + data.data.name,
                    inputPlaceholder: "Nhập tên mới",
                    showCancelButton: true,
                    confirmButtonText: "Xác nhận",
                    cancelButtonText: "Huỷ bỏ"
                });
                if (newName) {
                    $.ajax({
                        url: "UpdateName",
                        type: "POST",
                        data: {
                            id: id,
                            Name: newName
                        },
                        success: function (data) {
                            if (data.success) {
                                Toast.fire({
                                    icon: "success",
                                    title: "Đang xử lý..."
                                }).then(function () {
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire(
                                    "Không thành công!",
                                    data.message,
                                    "error"
                                );
                            }
                        },
                    });

                }
            } else {
                Swal.fire("Thất bại!", data.message, "error");
            }
        }

        $(".btnXoa").click(function (e) {
            var id = $(this).data("id");
            var name = $(this).data("name");

            swalWithBootstrapButtons
                .fire({
                    title: "Xoá phòng thi?",
                    text: name,
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Xác nhận",
                    cancelButtonText: "Huỷ bỏ"
                })
                .then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: "Delete",
                            type: "POST",
                            data: {
                                id: id
                            },
                            success: function (data) {
                                if (data.success) {
                                    Toast.fire({
                                        icon: "success",
                                        title: "Đang xử lý..."
                                    }).then(function () {
                                        window.location.reload();
                                    });
                                } else {
                                    Swal.fire(
                                        "Không thành công!",
                                        data.message,
                                        "error"
                                    );
                                }
                            },
                        });
                    }
                });

        });
    });
</script>



