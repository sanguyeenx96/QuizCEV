@{
    int thoigianthi = ViewBag.thoiGianThi;
}
<style>
    .tick {
        font-size: 1rem;
        white-space: nowrap;
        font-family: arial,sans-serif;
    }

    .tick-flip, .tick-text-inline {
        font-size: 2.5em;
    }

    .tick-label {
        margin-top: 1em;
        font-size: 1em;
    }

    .tick-char {
        width: 1.5em;
    }

    .tick-group {
        margin: 0 0.15em;
        text-align: center;
    }

    body {
        background-color: #fff !important;
    }

    .tick-text-inline {
        color: #595d63 !important;
    }

    .tick-label {
        color: #595d63 !important;
    }

    .tick-flip-panel {
        color: #fff !important;
    }

    .tick-flip {
        font-family: inherit !important;
    }

    .tick-flip-panel-text-wrapper {
        line-height: 1.45 !important;
    }

    .tick-flip-panel {
        background-color: #3c3e3c !important;
    }

    .tick-flip {
        border-radius: 0.12em !important;
    }

    #dongho {
        position: fixed;
        bottom: 0;
        left: 0;
        width: 100%;
        padding-bottom: 60px; /* Adjust the padding as needed */
        pointer-events: none;
    }
</style>
<div class="container-sm">
    <ul class="nav nav-pills nav-fill gap-2 p-1 small bg-white rounded-pill shadow-sm" id="pills-tab" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link rounded-pill  active btnCauhoitracnghiem" id="pills-tracnghiem-tab" data-coreui-toggle="pill" data-coreui-target="#pills-tracnghiem" type="button" role="tab" aria-controls="pills-tracnghiem" aria-selected="true">
                Trắc nghiệm
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link  rounded-pill  btnCauhoituluan" id="pills-tuluan-tab" data-coreui-toggle="pill" data-coreui-target="#pills-tuluan" type="button" role="tab" aria-controls="pills-tuluan" aria-selected="false">
                Tự luận
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link rounded-pill  btnXemlichsu" id="pills-lichsu-tab" data-coreui-toggle="pill" data-coreui-target="#pills-lichsu" type="button" role="tab" aria-controls="pills-lichsu" aria-selected="false">
                <i class="bi-clock"></i>
                Lịch sử
            </button>
        </li>
    </ul>
</div>
<div class="tab-content mt-3" id="pills-tabContent">
    <div class="tab-pane fade  show active" id="pills-tracnghiem" role="tabpanel" aria-labelledby="pills-tracnghiem-tab" tabindex="0">
        <div id="examTracNghiem">
        </div>
    </div>
    <div class="tab-pane fade" id="pills-tuluan" role="tabpanel" aria-labelledby="pills-tuluan-tab" tabindex="0">
        <div id="examTuluan"></div>
    </div>
    <div class="tab-pane fade" id="pills-lichsu" role="tabpanel" aria-labelledby="pills-lichsu-tab" tabindex="0">
        <div class="accordion" id="accordionExample">
        </div>
    </div>
</div>

<div id="dongho" class="row col-12">
    <div class="col-8" style="display: grid; place-items: center;">
        <button id="btnNopbai" class="btn btn-success text-white text-bold animate__animated animate__pulse animate__infinite shadow px-5 btn-lg" style="pointer-events: auto; height:100%;opacity:0.9">
            NỘP BÀI THI
        </button>
    </div>
    <div class="col-4">
        <div class="tick" data-did-init="handleTickInit" style="opacity:0.6">
            <div data-layout="horizontal fit" data-value-mapping="indexes">
                <span class="tick-group">
                    <span data-view="flip"></span>
                    <span class="tick-text-inline">:</span>
                </span>
                <span class="tick-group">
                    <span data-view="flip"></span>
                </span>
            </div>
        </div>
    </div>
</div>

<script>
    var countDownTime = @thoigianthi; //Load từ db
    var isDataSaved = false;
    var intervalId;
    function checkTempData() {
        $.ajax({
            url: 'GetTempDataStatusValue',
            type: 'GET',
            success: function (data) {
                console.log(data)
                if (data == "done") {
                    // Dừng interval khi data bằng "done"
                    clearInterval(intervalId);
                    $("#btnNopbai").show();
                }
            }
        });
    }
    // Gán ID của interval vào biến
    intervalId = setInterval(checkTempData, 5000);

    function handleTickInit(tick) {
        // Lấy giá trị thời gian còn lại từ localStorage (nếu có)
        var remainingTimeStr = localStorage.getItem('countdownTime');
        var remainingTime = remainingTimeStr ? parseInt(remainingTimeStr) : countDownTime * 60 * 1000; // Default: 45 minutes
        var countdownDuration = Tick.helper.duration(remainingTime, 'milliseconds');
        var timer = Tick.helper.interval(function (passed) {
            var remainingTime = Math.max(countdownDuration - passed, 0);
            if (remainingTime === 0 && !isDataSaved) {
                // Xử lý sự kiện khi đếm ngược kết thúc
                // Ví dụ: window.location = 'my-location.html'; // Redirect
                // Hoặc: tick.root.style.display = 'none'; // Ẩn đồng hồ đếm
                clearInterval(intervalId);

                Swal.fire({
                    html: "Hết thời gian làm bài",
                    timerProgressBar: true,
                    allowOutsideClick: false, // Tắt việc đóng cửa sổ khi bấm ngoài
                    didOpen: () => {
                        Swal.showLoading();
                        var remainingTimeStr = localStorage.getItem('countdownTime');
                        $.ajax({
                            type: "POST",
                            url: "Save",
                            data: {
                                time: remainingTimeStr
                            },
                            success: function (result) {
                                isDataSaved = true;
                                if (result.success) {
                                    Swal.fire({
                                        icon: "success",
                                        showConfirmButton: false,
                                        timer: 1500 // Hiển thị thông báo thành công trong 1.5 giây
                                    }).then(() => {
                                        var url = "ConfirmEndExam";
                                        window.location.href = url;
                                    });
                                }
                                else {
                                    Swal.fire({
                                        icon: "error",
                                        title: "Lỗi kết nối, hãy thử lại...",
                                        showConfirmButton: false,
                                        timer: 1500 // Hiển thị thông báo thành công trong 1.5 giây
                                    })
                                }
                            }
                        });
                    }
                })
            }
            tick.value = Tick.helper.duration(remainingTime, ['m', 's', 'ms']);
            // Lưu thời gian còn lại vào localStorage
            localStorage.setItem('countdownTime', remainingTime.toString());
        }, 1000, { autostart: true });
    }

    $("#btnNopbai").click(function () {
        Swal.fire({
            title: "Nộp bài thi?",
            text: "Hãy kiểm tra lịch sử câu trả lời trước khi nộp",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Nộp bài",
            cancelButtonText: "Huỷ bỏ"
        }).then((result) => {
            if (result.isConfirmed) {
                Swal.fire({
                    html: "Đang chấm điểm...",
                    timerProgressBar: true,
                    allowOutsideClick: false, // Tắt việc đóng cửa sổ khi bấm ngoài
                    didOpen: () => {
                        Swal.showLoading();
                        var remainingTimeStr = localStorage.getItem('countdownTime');
                        $.ajax({
                            type: "POST",
                            url: "Save",
                            data: {
                                time: remainingTimeStr
                            },
                            success: function (result) {
                                if (result.success) {
                                    Swal.fire({
                                        icon: "success",
                                        showConfirmButton: false,
                                        timer: 1500 // Hiển thị thông báo thành công trong 1.5 giây
                                    }).then(() => {
                                        var url = "ConfirmEndExam";
                                        window.location.href = url;
                                    });
                                }
                                else {
                                    Swal.fire({
                                        icon: "error",
                                        title: "Lỗi kết nối, hãy thử lại...",
                                        showConfirmButton: false,
                                        timer: 1500 // Hiển thị thông báo thành công trong 1.5 giây
                                    })
                                }
                            }
                        });
                    }
                })
            }
        });
    });

    $(document).ready(function () {
        $("#btnNopbai").hide();

        document.onkeydown = function (e) {
            if ((e.which || e.keyCode) === 116) {
                e.preventDefault();
            }
        };
        $.ajax({
            url: 'TestingTracNghiem',
            type: 'GET',
            success: function (response) {
                $("#examTracNghiem").html(response);
            },
            error: function (error) {
                console.log(error);
            }
        });
        $(".btnCauhoitracnghiem").click(function () {
            $.ajax({
                url: 'TestingTracNghiem',
                type: 'GET',
                success: function (response) {
                    $("#examTracNghiem").html(response);
                },
                error: function (error) {
                    console.log(error);
                }
            });
        })

        $(".btnCauhoituluan").click(function () {
            $.ajax({
                url: 'TestingTuLuanVer2', // Add "Ver2"
                type: 'GET',
                success: function (response) {
                    $("#examTuluan").html(response);
                },
                error: function (error) {
                    console.log(error);
                }
            });
        })
        $(".btnXemlichsu").click(function () {
            $.ajax({
                url: 'GetLogQuestionAndAnswers',
                type: 'GET',
                success: function (response) {
                    $("#accordionExample").html(response);
                },
                error: function (error) {
                    console.log(error);
                }
            });
        })
    })
</script>