@model List<ViewModels.Category.Response.CategoryVm>
@{
    ViewData["Active"] = "pageBatdaukiemtra";
}
@section SideBar
    {
    <partial name="PageUser/_sideBar" />
    }
    <style>
        .center-pills {
            display: flex;
            justify-content: center;
        }
    </style>
    @{
    if (ViewBag.settingRetest == false)
    {
    <small>
        <span class="badge bg-danger">
            <i class="bi-exclamation-triangle-fill"></i>
            Không cho phép thi lại
        </span>
    </small>
    }
    else
    {
    <small>
        <span class="badge bg-success">
            <i class="bi-exclamation-triangle-fill"></i>
            Cho phép thi lại
        </span>
    </small>
    }
}

<h1 class="display-6">Chọn phòng thi </h1>

<ul class="nav nav-pills center-pills my-2" id="pills-tab" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="pills-open-tab" data-coreui-toggle="pill" data-coreui-target="#pills-open" type="button" role="tab" aria-controls="pills-open" aria-selected="true">
            Phòng thi đang mở
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="pills-close-tab" data-coreui-toggle="pill" data-coreui-target="#pills-close" type="button" role="tab" aria-controls="pills-close" aria-selected="false">
            Phòng thi đang đóng
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="pills-test-tab" data-coreui-toggle="pill" data-coreui-target="#pills-test" type="button" role="tab" aria-controls="pills-test" aria-selected="false">
            <i class="bi-mortarboard"></i>
            Chế độ luyện tập
        </button>
    </li>
</ul>
<div class="tab-content" id="pills-tabContent">
    <div class="tab-pane fade show active" id="pills-open" role="tabpanel" aria-labelledby="pills-open-tab" tabindex="0">
        @foreach (var item in Model.Where(x => x.Status == true))
        {
            <div class="card mb-2">
                <div class="card-body">
                    <h5 class="card-title">Phòng thi @item.Name</h5>
                    <p class="card-text">Thời gian làm bài <span class="badge bg-light text-dark">@item.Time phút</span> <br> Ngày tạo <span class="badge bg-light text-dark">@item.DateCreate.ToString("dd/MM/yyyy")</span> </p>
                    <input name="idPhong" value="@item.Id" hidden>
                    <button type="submit" class="btn btn-success btnBatdauthi"
                        data-idPhong="@item.Id"
                        data-tenPhong="@item.Name"
                        onclick="localStorage.clear();">
                        <i class="bi-play"></i>
                        Bắt đầu
                    </button>
                </div>
            </div>
        }
    </div>
    <div class="tab-pane fade" id="pills-close" role="tabpanel" aria-labelledby="pills-close-tab" tabindex="0">
        @foreach (var item in Model.Where(x => x.Status == false))
        {
            <div class="card mb-2">
                <div class="card-body">
                    <h5 class="card-title">Phòng thi @item.Name</h5>
                    <p class="card-text">Thời gian làm bài <span class="badge bg-light text-dark">@item.Time phút</span> <br> Ngày tạo <span class="badge bg-light text-dark">@item.DateCreate.ToString("dd/MM/yyyy")</span> </p>
                    <button type="button" class="btn btn-secondary" disabled>
                        <i class="bi-play"></i>
                        Bắt đầu
                    </button>
                </div>
            </div>
        }
    </div>
    <div class="tab-pane fade" id="pills-test" role="tabpanel" aria-labelledby="pills-test-tab" tabindex="0">
        @foreach (var item in Model)
        {
            <div class="card mb-2">
                <div class="card-body">
                    <h5 class="card-title">Phòng thi @item.Name</h5>
                    <p class="card-text">Thời gian làm bài <span class="badge bg-light text-dark">@item.Time phút</span> <br> Ngày tạo <span class="badge bg-light text-dark">@item.DateCreate.ToString("dd/MM/yyyy")</span> </p>
                    <button type="button" class="btn btn-warning btnBatdauthithu"
                        data-idPhong="@item.Id"
                        data-tenPhong="@item.Name"
                        onclick="localStorage.clear();">
                        <i class="bi-play"></i>
                        Bắt đầu thi thử
                    </button>
                </div>
            </div>
        }
    </div>
</div>


<script>
    $(document).ready(function () {
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: "btn btn-success",
                cancelButton: "btn btn-danger",
            },
            buttonsStyling: true,
        });
        $(".btnBatdauthi").click(function () {
            var idPhong = $(this).attr("data-idPhong");
            var tenPhong = $(this).attr("data-tenPhong");

        swalWithBootstrapButtons
            .fire({
                title: "Bắt đầu?",
                text: "Phòng thi " + tenPhong,
                showCancelButton: true,
                confirmButtonText: "Xác nhận",
                cancelButtonText: "Huỷ bỏ",
                reverseButtons: true,
            })
            .then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "SelectRoom", // Đường dẫn đến action
                        method: "POST",
                        data: { idPhong: idPhong
                            , categoryName: tenPhong
                        }, // Dữ liệu gửi đi
                        success: function (response) {
                            if (response.success){
                                var url = "Test";
                                window.location.href = url;
                            }
                            else{
                                Swal.fire({
                                    icon: "error",
                                    width: 300,
                                    text: response.message,
                                    showConfirmButton: false,
                                    timer: 2000,
                                });
                            }        

                        },
                        error: function (error) {
                            // Xử lý lỗi nếu có
                            console.error("Error:", error);
                        }
                    });
                }
            });
        });

        $(".btnBatdauthithu").click(function () {
            var idPhong = $(this).attr("data-idPhong");
            var tenPhong = $(this).attr("data-tenPhong");
            swalWithBootstrapButtons
                .fire({
                    title: "Bắt đầu?",
                    text: "Phòng thi " + tenPhong,
                    showCancelButton: true,
                    confirmButtonText: "Xác nhận",
                    cancelButtonText: "Huỷ bỏ",
                    reverseButtons: true,
                })
                .then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: "SelectRoomTest", // Đường dẫn đến action
                            method: "POST",
                            data: {
                                idPhong: idPhong
                                , categoryName: tenPhong
                            }, // Dữ liệu gửi đi
                            success: function (response) {
                                if (response.success) {
                                    var url = "Test";
                                    window.location.href = url;
                                }
                                else {
                                    Swal.fire({
                                        icon: "error",
                                        width: 300,
                                        text: response.message,
                                        showConfirmButton: false,
                                        timer: 2000,
                                    });
                                }

                            },
                            error: function (error) {
                                // Xử lý lỗi nếu có
                                console.error("Error:", error);
                            }
                        });
                    }
                });
        })
    });
</script>